apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  labels:
    app.kubernetes.io/instance: sensor-app-build
    app.kubernetes.io/name: sensor-app-build
    pipeline.openshift.io/strategy: docker
    pipeline.openshift.io/type: kubernetes
  name: sensor-app-build
  namespace: sensor-app
spec:
  finally:
    - name: openshift-client
      params:
        - name: SCRIPT
          value: oc get route
        - name: VERSION
          value: latest
      taskRef:
        kind: ClusterTask
        name: openshift-client
      workspaces:
        - name: kubeconfig-dir
          workspace: workspace
        - name: manifest-dir
          workspace: workspace
  params:
    - default: nodejs
      name: APP_NAME
      type: string
    - default: 'https://github.com/Tal-Hason/NodeJS-deployment-demo.git'
      name: GIT_REPO
      type: string
    - default: main
      name: GIT_REVISION
      type: string
    - default: quay.io/thason/node-hello-world
      name: IMAGE_NAME
      type: string
    - default: .
      name: PATH_CONTEXT
      type: string
    - default: quay.io/thason/node-hello-world
      name: QUAY_IMAGE
      type: string
    - default: latest
      name: IMAGE_TAG
      type: string
    - default: git-user
      name: SECRET_NAME
      type: string
    - default: nodejs-demo
      name: NAMESPACE
      type: string
    - default: nodejs-app
      name: ARGO_PROJECT
      type: string
    - default: argocd-application-folder
      name: APP_OF_APPS
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: deleteExisting
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8:v1.7.2-11
      runAfter:
        - clean-chart
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
    - name: build
      params:
        - name: IMAGE
          value: '$(params.IMAGE_NAME):$(params.IMAGE_TAG)'
        - name: TLSVERIFY
          value: 'false'
        - name: CONTEXT
          value: $(params.PATH_CONTEXT)
        - name: DOCKERFILE
          value: ContainerFile
        - name: FORMAT
          value: docker
        - name: BUILDER_IMAGE
          value: 'registry.access.redhat.com/ubi8/buildah:latest'
      runAfter:
        - fetch-repository
      taskRef:
        kind: ClusterTask
        name: build-n-push
      workspaces:
        - name: source
          workspace: workspace
    - name: update-chart
      params:
        - name: git-url-source
          value: github.com
        - name: git-user
          value: Tal-Hason
        - name: git-repo-name
          value: NodeJS-deployment-demo
        - name: tag
          value: $(params.IMAGE_TAG)
        - name: branch
          value: $(params.GIT_REVISION)
        - name: git-secret-name
          value: $(params.SECRET_NAME)
      runAfter:
        - build
      taskRef:
        kind: ClusterTask
        name: update-chart
    - name: update-argocd-app
      params:
        - name: git-url-source
          value: github.com
        - name: git-user
          value: Tal-Hason
        - name: git-repo-name
          value: NodeJS-deployment-demo
        - name: tag
          value: $(params.IMAGE_TAG)
        - name: branch
          value: $(params.GIT_REVISION)
        - name: git-secret-name
          value: $(params.SECRET_NAME)
        - name: namespace
          value: $(params.NAMESPACE)
        - name: git-full-url
          value: $(params.GIT_REPO)
        - name: application-name
          value: $(params.APP_NAME)
        - name: project-name
          value: $(params.ARGO_PROJECT)
      runAfter:
        - update-argocd-proj
      taskRef:
        kind: ClusterTask
        name: update-argocd-app
    - name: update-argocd-proj
      params:
        - name: git-url-source
          value: github.com
        - name: git-user
          value: Tal-Hason
        - name: git-repo-name
          value: NodeJS-deployment-demo
        - name: tag
          value: $(params.IMAGE_TAG)
        - name: branch
          value: $(params.GIT_REVISION)
        - name: project-name
          value: $(params.ARGO_PROJECT)
        - name: git-secret-name
          value: $(params.SECRET_NAME)
        - name: namespace
          value: $(params.NAMESPACE)
        - name: git-full-url
          value: $(params.GIT_REPO)
      runAfter:
        - update-chart
      taskRef:
        kind: ClusterTask
        name: update-argocd-proj
    - name: clean-chart
      params:
        - name: git-url-source
          value: github.com
        - name: git-user
          value: Tal-Hason
        - name: git-repo-name
          value: NodeJS-deployment-demo
        - name: tag
          value: $(params.IMAGE_TAG)
        - name: branch
          value: $(params.GIT_REVISION)
        - name: project-name
          value: $(params.ARGO_PROJECT)
        - name: git-secret-name
          value: $(params.SECRET_NAME)
        - name: namespace
          value: $(params.NAMESPACE)
        - name: git-full-url
          value: $(params.GIT_REPO)
      taskRef:
        kind: ClusterTask
        name: clean-chart
  workspaces:
    - name: workspace